# Yolo

내용 정리   
   
Object Detection에서 봤던 R-CNN 시리즈들과의 차이점.   
- region proposal 과정을 거치고, classification을 수행하기 때문에 2-stage로 이루어짐.   
=> 2-stage의 경우 구조가 복잡하고 느리며, 각 단계가 각각 학습되기 때문에 최적화가 어렵다.   
   
- yolo는 2-stage가 아닌 1-stage로 진행이 된다.   
즉, bounding box 좌표 추출과 classification수행을 동시에 진행을 하게 된다.   
   
## 전체 과정   
1. input 이미지는 S x S grid로 분할한다.   
2. 객체의 중심이 grid cell에 맞게 떨어지면, 해당 grid cell은 객체를 탐지했다고 표기한다.   
3. 각 grid cell은 B개의 bounding box와 각 bounding box에 대한 confidence score을 예측한다.   
4. bounding box는 총 다섯가지의 정보를 가지고 있다. (x, y, w, h, score)   
5. 4번 과정과 동시에 각각의 grid cell은 bounding box 외에 대해서도 class 조건부 확률(conditional class probabilities)을 추측한다.   
이 확률들은 grid cell이 물체를 포함하고 있다는 가정하의 조건부 확률이며, 각 grid cell에서의 bounding box 수와 상관 없이 1세트의 class probabilities만 예측한다.   
6. 위의 과정을 거치면  S x S x (B*5 + C) size의 tensor가 된다.   
   
   
### 3번 추가 설명   
confidence score : bounding box가 객체를 어느정도 제대로 포함하고 있는지, 얼마나 정확하게 예측했는지를 반영한다.   
-> 예측된 박스와 진짜 박스 사이의 IoU   
해당 score은 Pr(Object) * IoUpredtruth 로 계산을 한다.   

   
### 4번 추가 설명   
bounding box   
x, y : bounding box의 중심 좌표(가로, 세로)   
w : bounding box의 가로  /  h : bounding box의 세로   

   
### 6번 추가 설명   
S x S x (B*5 + C) 설명   
S x S : grid size   
B*5 : bounding box * (x, y, w, h, score)   
C : 클래스 예측   
